async function mockGetVulnerabilityFix() {
    const messageIndex = Math.floor((Math.random() * 2)) % 2;

    const message = messageIndex >= 1 ? "SQL Injection Vulnerbility Detected" : "Sensitive Data Exposure Detected";

    const codeFix = "Filler for the actual code fix";

    return new Promise((res, _rej) => {
        setTimeout(() => {
            res({
                message,
                codeFix,
            })
        }, 200);
    });
}

/**
 * Get the fix for the vulnerability. This function assumes that the AI bot remembers the vulnerbility
 * from the previous request.
 */
async function getVulnerabilityFix({ filePath }) {
    const fixBranchName = "ai-bot-" + Date.now();

    const { message, codeFix } = await mockGetVulnerabilityFix();

    // TODO: create the pull request with the fix

    return {
        fixBranchName,
        message,
        codeFix,
    }
}

module.exports = {
    getVulnerabilityFix,
}